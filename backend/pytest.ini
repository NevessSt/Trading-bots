[tool:pytest]
# Pytest configuration file
minversion = 6.0
addopts = 
    -ra
    --strict-markers
    --strict-config
    --cov=.
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=80
    --tb=short
    --disable-warnings
    -v

testpaths = tests

python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

markers =
    unit: Unit tests
    integration: Integration tests
    e2e: End-to-end tests
    slow: Slow running tests
    security: Security tests
    performance: Performance tests
    api: API tests
    database: Database tests
    auth: Authentication tests
    trading: Trading engine tests
    subscription: Subscription tests
    admin: Admin functionality tests
    redis: Tests that require Redis
    external: Tests that require external services
    websocket: WebSocket tests
    load: Load testing
    stress: Stress testing
    smoke: Smoke tests
    regression: Regression tests
    critical: Critical functionality tests
    flaky: Tests that may be flaky
    skip_ci: Skip in CI environment
    windows_only: Windows specific tests
    linux_only: Linux specific tests
    requires_gpu: Tests requiring GPU
    requires_network: Tests requiring network access

filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*unclosed.*:ResourceWarning
    ignore:.*ssl.*:urllib3.exceptions.InsecureRequestWarning
    ignore:.*unverified HTTPS request.*:urllib3.exceptions.InsecureRequestWarning

# Test timeout (in seconds)
timeout = 300
timeout_method = thread

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

[coverage:run]
source = .
omit = 
    */tests/*
    */venv/*
    */env/*
    */.venv/*
    */migrations/*
    */alembic/*
    setup.py
    conftest.py
    */conftest.py
    */__pycache__/*
    */site-packages/*
    */dist/*
    */build/*
    */.git/*
    */.pytest_cache/*
    */htmlcov/*
    */test-results/*
    */logs/*
    */tmp/*
    */temp/*
    config/settings.py
    manage.py
    wsgi.py
    asgi.py
    run.py
    app.py
    main.py
    */node_modules/*

branch = True
parallel = True
concurrency = multiprocessing

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod
    @overload
    # TYPE_CHECKING
    if TYPE_CHECKING:
    \.\.\.  # ellipsis
    pass
    except ImportError:
    except ModuleNotFoundError:
    # pragma: no cover
    # nocov
    # noqa

ignore_errors = True
skip_covered = False
skip_empty = True
show_missing = True
sort = Cover
precision = 2

[coverage:html]
directory = htmlcov
title = Trading Bot Platform Coverage Report

[coverage:xml]
output = coverage.xml

[coverage:json]
output = coverage.json
pretty_print = true