version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: trading_bot_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: trading_bot_celery_worker
    command: python worker.py
    volumes:
      - .:/app
      - ./logs:/app/logs
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DATABASE_URL=postgresql://user:password@db:5432/trading_bot
      - FLASK_ENV=production
      - PYTHONPATH=/app
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "celery", "-A", "celery_app", "inspect", "ping"]
      interval: 60s
      timeout: 30s
      retries: 3
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: trading_bot_celery_beat
    command: python beat.py
    volumes:
      - .:/app
      - ./logs:/app/logs
      - beat_data:/app/beat
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DATABASE_URL=postgresql://user:password@db:5432/trading_bot
      - FLASK_ENV=production
      - PYTHONPATH=/app
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "ps", "aux", "|", "grep", "celery"]
      interval: 60s
      timeout: 30s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  celery_flower:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: trading_bot_celery_flower
    command: celery -A celery_app flower --port=5555 --broker=redis://redis:6379/0
    ports:
      - "5555:5555"
    volumes:
      - .:/app
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - FLOWER_BASIC_AUTH=admin:admin123
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5555"]
      interval: 60s
      timeout: 30s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

volumes:
  redis_data:
    driver: local
  beat_data:
    driver: local

networks:
  default:
    name: trading_bot_network
    external: true