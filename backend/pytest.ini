[tool:pytest]
minversion = 6.0
addopts = 
    -ra
    --strict-markers
    --strict-config
    --cov=.
    --cov-report=term-missing:skip-covered
    --cov-report=html:htmlcov
    --cov-report=xml
    --cov-fail-under=70
    --tb=short
    --maxfail=5
    --durations=10
    --disable-warnings
    -p no:cacheprovider
    --timeout=300
    --timeout-method=thread
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:ccxt.*
    ignore::RuntimeWarning
markers =
    unit: Unit tests
    integration: Integration tests
    security: Security tests
    performance: Performance tests
    api: API tests
    database: Database tests
    websocket: WebSocket tests
    load: Load tests
    stress: Stress tests
    regression: Regression tests
    slow: Slow running tests
    fast: Fast running tests
    critical: Critical functionality tests
    smoke: Smoke tests
    backtest: Backtesting tests
    strategy: Strategy tests
    trading: Trading engine tests
    auth: Authentication tests
    license: License management tests
    notification: Notification tests
    logging: Logging tests
    error_handling: Error handling tests
    retry: Retry logic tests
    encryption: Encryption tests
    sandbox: Sandbox mode tests
    mock: Tests using mocks
    real_data: Tests using real market data
    timeout: Tests with timeout requirements
    memory: Memory usage tests
    cpu: CPU usage tests
    network: Network dependent tests
    external: Tests requiring external services
    cleanup: Tests requiring cleanup
    parametrize: Parametrized tests
    xfail: Expected to fail tests
    skip: Skipped tests
junit_family = xunit2
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S
log_file = tests/logs/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d %(funcName)s(): %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S